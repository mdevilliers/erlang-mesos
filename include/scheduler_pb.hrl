%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.18.8 on {{2015,11,2},{14,11,10}}

-ifndef(scheduler_pb).
-define(scheduler_pb, true).

-define(scheduler_pb_gpb_version, "3.18.8").

-record('mesos.v1.Label',
        {key,                           % = 1, string
         value                          % = 2, string (optional)
        }).

-record('mesos.v1.Labels',
        {labels = []                    % = 1, [{msg,'mesos.v1.Label'}]
        }).

-record('mesos.v1.Image.AppC',
        {name,                          % = 1, string
         id,                            % = 2, string
         labels                         % = 3, {msg,'mesos.v1.Labels'} (optional)
        }).

-record('mesos.v1.Image',
        {type,                          % = 1, {enum,'mesos.v1.Image.Type'}
         appc                           % = 2, {msg,'mesos.v1.Image.AppC'} (optional)
        }).

-record('mesos.v1.ContainerInfo.MesosInfo',
        {image                          % = 1, {msg,'mesos.v1.Image'} (optional)
        }).

-record('mesos.v1.Parameter',
        {key,                           % = 1, string
         value                          % = 2, string
        }).

-record('mesos.v1.ContainerInfo.DockerInfo.PortMapping',
        {host_port,                     % = 1, uint32
         container_port,                % = 2, uint32
         protocol                       % = 3, string (optional)
        }).

-record('mesos.v1.ContainerInfo.DockerInfo',
        {image,                         % = 1, string
         network = 'HOST',              % = 2, {enum,'mesos.v1.ContainerInfo.DockerInfo.Network'} (optional)
         port_mappings = [],            % = 3, [{msg,'mesos.v1.ContainerInfo.DockerInfo.PortMapping'}]
         privileged = false,            % = 4, bool (optional)
         parameters = [],               % = 5, [{msg,'mesos.v1.Parameter'}]
         force_pull_image               % = 6, bool (optional)
        }).

-record('mesos.v1.Volume',
        {mode,                          % = 3, {enum,'mesos.v1.Volume.Mode'}
         container_path,                % = 1, string
         host_path,                     % = 2, string (optional)
         image                          % = 4, {msg,'mesos.v1.Image'} (optional)
        }).

-record('mesos.v1.ContainerInfo',
        {type,                          % = 1, {enum,'mesos.v1.ContainerInfo.Type'}
         volumes = [],                  % = 2, [{msg,'mesos.v1.Volume'}]
         hostname,                      % = 4, string (optional)
         docker,                        % = 3, {msg,'mesos.v1.ContainerInfo.DockerInfo'} (optional)
         mesos                          % = 5, {msg,'mesos.v1.ContainerInfo.MesosInfo'} (optional)
        }).

-record('mesos.v1.AgentID',
        {value                          % = 1, string
        }).

-record('mesos.v1.Value.Text',
        {value                          % = 1, string
        }).

-record('mesos.v1.Value.Set',
        {item = []                      % = 1, [string]
        }).

-record('mesos.v1.Value.Range',
        {'begin',                       % = 1, uint64
         'end'                          % = 2, uint64
        }).

-record('mesos.v1.Value.Ranges',
        {range = []                     % = 1, [{msg,'mesos.v1.Value.Range'}]
        }).

-record('mesos.v1.Value.Scalar',
        {value                          % = 1, double
        }).

-record('mesos.v1.Attribute',
        {name,                          % = 1, string
         type,                          % = 2, {enum,'mesos.v1.Value.Type'}
         scalar,                        % = 3, {msg,'mesos.v1.Value.Scalar'} (optional)
         ranges,                        % = 4, {msg,'mesos.v1.Value.Ranges'} (optional)
         set,                           % = 6, {msg,'mesos.v1.Value.Set'} (optional)
         text                           % = 5, {msg,'mesos.v1.Value.Text'} (optional)
        }).

-record('mesos.v1.Resource.RevocableInfo',
        {
        }).

-record('mesos.v1.Resource.DiskInfo.Persistence',
        {id                             % = 1, string
        }).

-record('mesos.v1.Resource.DiskInfo',
        {persistence,                   % = 1, {msg,'mesos.v1.Resource.DiskInfo.Persistence'} (optional)
         volume                         % = 2, {msg,'mesos.v1.Volume'} (optional)
        }).

-record('mesos.v1.Resource.ReservationInfo',
        {principal                      % = 1, string
        }).

-record('mesos.v1.Resource',
        {name,                          % = 1, string
         type,                          % = 2, {enum,'mesos.v1.Value.Type'}
         scalar,                        % = 3, {msg,'mesos.v1.Value.Scalar'} (optional)
         ranges,                        % = 4, {msg,'mesos.v1.Value.Ranges'} (optional)
         set,                           % = 5, {msg,'mesos.v1.Value.Set'} (optional)
         role = "*",                    % = 6, string (optional)
         reservation,                   % = 8, {msg,'mesos.v1.Resource.ReservationInfo'} (optional)
         disk,                          % = 7, {msg,'mesos.v1.Resource.DiskInfo'} (optional)
         revocable                      % = 9, {msg,'mesos.v1.Resource.RevocableInfo'} (optional)
        }).

-record('mesos.v1.AgentInfo',
        {hostname,                      % = 1, string
         port = 5051,                   % = 8, int32 (optional)
         resources = [],                % = 3, [{msg,'mesos.v1.Resource'}]
         attributes = [],               % = 5, [{msg,'mesos.v1.Attribute'}]
         id                             % = 6, {msg,'mesos.v1.AgentID'} (optional)
        }).

-record('mesos.v1.Request',
        {agent_id,                      % = 1, {msg,'mesos.v1.AgentID'} (optional)
         resources = []                 % = 2, [{msg,'mesos.v1.Resource'}]
        }).

-record('mesos.v1.scheduler.Call.Request',
        {requests = []                  % = 1, [{msg,'mesos.v1.Request'}]
        }).

-record('mesos.v1.ExecutorID',
        {value                          % = 1, string
        }).

-record('mesos.v1.scheduler.Call.Message',
        {agent_id,                      % = 1, {msg,'mesos.v1.AgentID'}
         executor_id,                   % = 2, {msg,'mesos.v1.ExecutorID'}
         data                           % = 3, bytes
        }).

-record('mesos.v1.TaskID',
        {value                          % = 1, string
        }).

-record('mesos.v1.scheduler.Call.Reconcile.Task',
        {task_id,                       % = 1, {msg,'mesos.v1.TaskID'}
         agent_id                       % = 2, {msg,'mesos.v1.AgentID'} (optional)
        }).

-record('mesos.v1.scheduler.Call.Reconcile',
        {tasks = []                     % = 1, [{msg,'mesos.v1.scheduler.Call.Reconcile.Task'}]
        }).

-record('mesos.v1.scheduler.Call.Acknowledge',
        {agent_id,                      % = 1, {msg,'mesos.v1.AgentID'}
         task_id,                       % = 2, {msg,'mesos.v1.TaskID'}
         uuid                           % = 3, bytes
        }).

-record('mesos.v1.scheduler.Call.Shutdown',
        {executor_id,                   % = 1, {msg,'mesos.v1.ExecutorID'}
         agent_id                       % = 2, {msg,'mesos.v1.AgentID'}
        }).

-record('mesos.v1.scheduler.Call.Kill',
        {task_id,                       % = 1, {msg,'mesos.v1.TaskID'}
         agent_id                       % = 2, {msg,'mesos.v1.AgentID'} (optional)
        }).

-record('mesos.v1.Filters',
        {refuse_seconds = 5.0           % = 1, double (optional)
        }).

-record('mesos.v1.OfferID',
        {value                          % = 1, string
        }).

-record('mesos.v1.scheduler.Call.Decline',
        {offer_ids = [],                % = 1, [{msg,'mesos.v1.OfferID'}]
         filters                        % = 2, {msg,'mesos.v1.Filters'} (optional)
        }).

-record('mesos.v1.Offer.Operation.Destroy',
        {volumes = []                   % = 1, [{msg,'mesos.v1.Resource'}]
        }).

-record('mesos.v1.Offer.Operation.Create',
        {volumes = []                   % = 1, [{msg,'mesos.v1.Resource'}]
        }).

-record('mesos.v1.Offer.Operation.Unreserve',
        {resources = []                 % = 1, [{msg,'mesos.v1.Resource'}]
        }).

-record('mesos.v1.Offer.Operation.Reserve',
        {resources = []                 % = 1, [{msg,'mesos.v1.Resource'}]
        }).

-record('mesos.v1.Port',
        {number,                        % = 1, uint32
         name,                          % = 2, string (optional)
         protocol                       % = 3, string (optional)
        }).

-record('mesos.v1.Ports',
        {ports = []                     % = 1, [{msg,'mesos.v1.Port'}]
        }).

-record('mesos.v1.DiscoveryInfo',
        {visibility,                    % = 1, {enum,'mesos.v1.DiscoveryInfo.Visibility'}
         name,                          % = 2, string (optional)
         environment,                   % = 3, string (optional)
         location,                      % = 4, string (optional)
         version,                       % = 5, string (optional)
         ports,                         % = 6, {msg,'mesos.v1.Ports'} (optional)
         labels                         % = 7, {msg,'mesos.v1.Labels'} (optional)
        }).

-record('mesos.v1.Environment.Variable',
        {name,                          % = 1, string
         value                          % = 2, string
        }).

-record('mesos.v1.Environment',
        {variables = []                 % = 1, [{msg,'mesos.v1.Environment.Variable'}]
        }).

-record('mesos.v1.CommandInfo.URI',
        {value,                         % = 1, string
         executable,                    % = 2, bool (optional)
         extract = true,                % = 3, bool (optional)
         cache                          % = 4, bool (optional)
        }).

-record('mesos.v1.CommandInfo.ContainerInfo',
        {image,                         % = 1, string
         options = []                   % = 2, [string]
        }).

-record('mesos.v1.CommandInfo',
        {container,                     % = 4, {msg,'mesos.v1.CommandInfo.ContainerInfo'} (optional)
         uris = [],                     % = 1, [{msg,'mesos.v1.CommandInfo.URI'}]
         environment,                   % = 2, {msg,'mesos.v1.Environment'} (optional)
         shell = true,                  % = 6, bool (optional)
         value,                         % = 3, string (optional)
         arguments = [],                % = 7, [string]
         user                           % = 5, string (optional)
        }).

-record('mesos.v1.HealthCheck.HTTP',
        {port,                          % = 1, uint32
         path = "/",                    % = 2, string (optional)
         statuses = []                  % = 4, [uint32]
        }).

-record('mesos.v1.HealthCheck',
        {http,                          % = 1, {msg,'mesos.v1.HealthCheck.HTTP'} (optional)
         delay_seconds = 15.0,          % = 2, double (optional)
         interval_seconds = 10.0,       % = 3, double (optional)
         timeout_seconds = 20.0,        % = 4, double (optional)
         consecutive_failures = 3,      % = 5, uint32 (optional)
         grace_period_seconds = 10.0,   % = 6, double (optional)
         command                        % = 7, {msg,'mesos.v1.CommandInfo'} (optional)
        }).

-record('mesos.v1.FrameworkID',
        {value                          % = 1, string
        }).

-record('mesos.v1.ExecutorInfo',
        {executor_id,                   % = 1, {msg,'mesos.v1.ExecutorID'}
         framework_id,                  % = 8, {msg,'mesos.v1.FrameworkID'} (optional)
         command,                       % = 7, {msg,'mesos.v1.CommandInfo'}
         container,                     % = 11, {msg,'mesos.v1.ContainerInfo'} (optional)
         resources = [],                % = 5, [{msg,'mesos.v1.Resource'}]
         name,                          % = 9, string (optional)
         source,                        % = 10, string (optional)
         data,                          % = 4, bytes (optional)
         discovery                      % = 12, {msg,'mesos.v1.DiscoveryInfo'} (optional)
        }).

-record('mesos.v1.TaskInfo',
        {name,                          % = 1, string
         task_id,                       % = 2, {msg,'mesos.v1.TaskID'}
         agent_id,                      % = 3, {msg,'mesos.v1.AgentID'}
         resources = [],                % = 4, [{msg,'mesos.v1.Resource'}]
         executor,                      % = 5, {msg,'mesos.v1.ExecutorInfo'} (optional)
         command,                       % = 7, {msg,'mesos.v1.CommandInfo'} (optional)
         container,                     % = 9, {msg,'mesos.v1.ContainerInfo'} (optional)
         data,                          % = 6, bytes (optional)
         health_check,                  % = 8, {msg,'mesos.v1.HealthCheck'} (optional)
         labels,                        % = 10, {msg,'mesos.v1.Labels'} (optional)
         discovery                      % = 11, {msg,'mesos.v1.DiscoveryInfo'} (optional)
        }).

-record('mesos.v1.Offer.Operation.Launch',
        {task_infos = []                % = 1, [{msg,'mesos.v1.TaskInfo'}]
        }).

-record('mesos.v1.Offer.Operation',
        {type,                          % = 1, {enum,'mesos.v1.Offer.Operation.Type'}
         launch,                        % = 2, {msg,'mesos.v1.Offer.Operation.Launch'} (optional)
         reserve,                       % = 3, {msg,'mesos.v1.Offer.Operation.Reserve'} (optional)
         unreserve,                     % = 4, {msg,'mesos.v1.Offer.Operation.Unreserve'} (optional)
         create,                        % = 5, {msg,'mesos.v1.Offer.Operation.Create'} (optional)
         destroy                        % = 6, {msg,'mesos.v1.Offer.Operation.Destroy'} (optional)
        }).

-record('mesos.v1.scheduler.Call.Accept',
        {offer_ids = [],                % = 1, [{msg,'mesos.v1.OfferID'}]
         operations = [],               % = 2, [{msg,'mesos.v1.Offer.Operation'}]
         filters                        % = 3, {msg,'mesos.v1.Filters'} (optional)
        }).

-record('mesos.v1.FrameworkInfo.Capability',
        {type                           % = 1, {enum,'mesos.v1.FrameworkInfo.Capability.Type'}
        }).

-record('mesos.v1.FrameworkInfo',
        {user,                          % = 1, string
         name,                          % = 2, string
         id,                            % = 3, {msg,'mesos.v1.FrameworkID'} (optional)
         failover_timeout = 0.0,        % = 4, double (optional)
         checkpoint = false,            % = 5, bool (optional)
         role = "*",                    % = 6, string (optional)
         hostname,                      % = 7, string (optional)
         principal,                     % = 8, string (optional)
         webui_url,                     % = 9, string (optional)
         capabilities = []              % = 10, [{msg,'mesos.v1.FrameworkInfo.Capability'}]
        }).

-record('mesos.v1.scheduler.Call.Subscribe',
        {framework_info,                % = 1, {msg,'mesos.v1.FrameworkInfo'}
         force                          % = 2, bool (optional)
        }).

-record('mesos.v1.scheduler.Call',
        {framework_id,                  % = 1, {msg,'mesos.v1.FrameworkID'} (optional)
         type,                          % = 2, {enum,'mesos.v1.scheduler.Call.Type'}
         subscribe,                     % = 3, {msg,'mesos.v1.scheduler.Call.Subscribe'} (optional)
         accept,                        % = 4, {msg,'mesos.v1.scheduler.Call.Accept'} (optional)
         decline,                       % = 5, {msg,'mesos.v1.scheduler.Call.Decline'} (optional)
         kill,                          % = 6, {msg,'mesos.v1.scheduler.Call.Kill'} (optional)
         shutdown,                      % = 7, {msg,'mesos.v1.scheduler.Call.Shutdown'} (optional)
         acknowledge,                   % = 8, {msg,'mesos.v1.scheduler.Call.Acknowledge'} (optional)
         reconcile,                     % = 9, {msg,'mesos.v1.scheduler.Call.Reconcile'} (optional)
         message,                       % = 10, {msg,'mesos.v1.scheduler.Call.Message'} (optional)
         request                        % = 11, {msg,'mesos.v1.scheduler.Call.Request'} (optional)
        }).

-record('mesos.v1.RateLimit',
        {qps,                           % = 1, double (optional)
         principal,                     % = 2, string
         capacity                       % = 3, uint64 (optional)
        }).

-record('mesos.v1.RateLimits',
        {limits = [],                   % = 1, [{msg,'mesos.v1.RateLimit'}]
         aggregate_default_qps,         % = 2, double (optional)
         aggregate_default_capacity     % = 3, uint64 (optional)
        }).

-record('mesos.v1.Parameters',
        {parameter = []                 % = 1, [{msg,'mesos.v1.Parameter'}]
        }).

-record('mesos.v1.Address',
        {hostname,                      % = 1, string (optional)
         ip,                            % = 2, string (optional)
         port                           % = 3, int32
        }).

-record('mesos.v1.URL',
        {scheme,                        % = 1, string
         address,                       % = 2, {msg,'mesos.v1.Address'}
         path,                          % = 3, string (optional)
         query = [],                    % = 4, [{msg,'mesos.v1.Parameter'}]
         fragment                       % = 5, string (optional)
        }).

-record('mesos.v1.Offer',
        {id,                            % = 1, {msg,'mesos.v1.OfferID'}
         framework_id,                  % = 2, {msg,'mesos.v1.FrameworkID'}
         agent_id,                      % = 3, {msg,'mesos.v1.AgentID'}
         hostname,                      % = 4, string
         url,                           % = 8, {msg,'mesos.v1.URL'} (optional)
         resources = [],                % = 5, [{msg,'mesos.v1.Resource'}]
         attributes = [],               % = 7, [{msg,'mesos.v1.Attribute'}]
         executor_ids = []              % = 6, [{msg,'mesos.v1.ExecutorID'}]
        }).

-record('mesos.v1.Credential',
        {principal,                     % = 1, string
         secret                         % = 2, bytes (optional)
        }).

-record('mesos.v1.ACL.Entity',
        {type = 'SOME',                 % = 1, {enum,'mesos.v1.ACL.Entity.Type'} (optional)
         values = []                    % = 2, [string]
        }).

-record('mesos.v1.TaskStatus',
        {task_id,                       % = 1, {msg,'mesos.v1.TaskID'}
         state,                         % = 2, {enum,'mesos.v1.TaskState'}
         message,                       % = 4, string (optional)
         source,                        % = 9, {enum,'mesos.v1.TaskStatus.Source'} (optional)
         reason,                        % = 10, {enum,'mesos.v1.TaskStatus.Reason'} (optional)
         data,                          % = 3, bytes (optional)
         agent_id,                      % = 5, {msg,'mesos.v1.AgentID'} (optional)
         executor_id,                   % = 7, {msg,'mesos.v1.ExecutorID'} (optional)
         timestamp,                     % = 6, double (optional)
         uuid,                          % = 11, bytes (optional)
         healthy,                       % = 8, bool (optional)
         labels                         % = 12, {msg,'mesos.v1.Labels'} (optional)
        }).

-record('mesos.v1.scheduler.Event.Update',
        {status                         % = 1, {msg,'mesos.v1.TaskStatus'}
        }).

-record('mesos.v1.scheduler.Event.Error',
        {message                        % = 1, string
        }).

-record('mesos.v1.scheduler.Event.Failure',
        {agent_id,                      % = 1, {msg,'mesos.v1.AgentID'} (optional)
         executor_id,                   % = 2, {msg,'mesos.v1.ExecutorID'} (optional)
         status                         % = 3, int32 (optional)
        }).

-record('mesos.v1.scheduler.Event.Message',
        {agent_id,                      % = 1, {msg,'mesos.v1.AgentID'}
         executor_id,                   % = 2, {msg,'mesos.v1.ExecutorID'}
         data                           % = 3, bytes
        }).

-record('mesos.v1.scheduler.Event.Rescind',
        {offer_id                       % = 1, {msg,'mesos.v1.OfferID'}
        }).

-record('mesos.v1.scheduler.Event.Offers',
        {offers = []                    % = 1, [{msg,'mesos.v1.Offer'}]
        }).

-record('mesos.v1.scheduler.Event.Subscribed',
        {framework_id,                  % = 1, {msg,'mesos.v1.FrameworkID'}
         heartbeat_interval_seconds     % = 2, double (optional)
        }).

-record('mesos.v1.scheduler.Event',
        {type,                          % = 1, {enum,'mesos.v1.scheduler.Event.Type'}
         subscribed,                    % = 2, {msg,'mesos.v1.scheduler.Event.Subscribed'} (optional)
         offers,                        % = 3, {msg,'mesos.v1.scheduler.Event.Offers'} (optional)
         rescind,                       % = 4, {msg,'mesos.v1.scheduler.Event.Rescind'} (optional)
         update,                        % = 5, {msg,'mesos.v1.scheduler.Event.Update'} (optional)
         message,                       % = 6, {msg,'mesos.v1.scheduler.Event.Message'} (optional)
         failure,                       % = 7, {msg,'mesos.v1.scheduler.Event.Failure'} (optional)
         error                          % = 8, {msg,'mesos.v1.scheduler.Event.Error'} (optional)
        }).

-record('mesos.v1.TrafficControlStatistics',
        {id,                            % = 1, string
         backlog,                       % = 2, uint64 (optional)
         bytes,                         % = 3, uint64 (optional)
         drops,                         % = 4, uint64 (optional)
         overlimits,                    % = 5, uint64 (optional)
         packets,                       % = 6, uint64 (optional)
         qlen,                          % = 7, uint64 (optional)
         ratebps,                       % = 8, uint64 (optional)
         ratepps,                       % = 9, uint64 (optional)
         requeues                       % = 10, uint64 (optional)
        }).

-record('mesos.v1.PerfStatistics',
        {timestamp,                     % = 1, double
         duration,                      % = 2, double
         cycles,                        % = 3, uint64 (optional)
         stalled_cycles_frontend,       % = 4, uint64 (optional)
         stalled_cycles_backend,        % = 5, uint64 (optional)
         instructions,                  % = 6, uint64 (optional)
         cache_references,              % = 7, uint64 (optional)
         cache_misses,                  % = 8, uint64 (optional)
         branches,                      % = 9, uint64 (optional)
         branch_misses,                 % = 10, uint64 (optional)
         bus_cycles,                    % = 11, uint64 (optional)
         ref_cycles,                    % = 12, uint64 (optional)
         cpu_clock,                     % = 13, double (optional)
         task_clock,                    % = 14, double (optional)
         page_faults,                   % = 15, uint64 (optional)
         minor_faults,                  % = 16, uint64 (optional)
         major_faults,                  % = 17, uint64 (optional)
         context_switches,              % = 18, uint64 (optional)
         cpu_migrations,                % = 19, uint64 (optional)
         alignment_faults,              % = 20, uint64 (optional)
         emulation_faults,              % = 21, uint64 (optional)
         l1_dcache_loads,               % = 22, uint64 (optional)
         l1_dcache_load_misses,         % = 23, uint64 (optional)
         l1_dcache_stores,              % = 24, uint64 (optional)
         l1_dcache_store_misses,        % = 25, uint64 (optional)
         l1_dcache_prefetches,          % = 26, uint64 (optional)
         l1_dcache_prefetch_misses,     % = 27, uint64 (optional)
         l1_icache_loads,               % = 28, uint64 (optional)
         l1_icache_load_misses,         % = 29, uint64 (optional)
         l1_icache_prefetches,          % = 30, uint64 (optional)
         l1_icache_prefetch_misses,     % = 31, uint64 (optional)
         llc_loads,                     % = 32, uint64 (optional)
         llc_load_misses,               % = 33, uint64 (optional)
         llc_stores,                    % = 34, uint64 (optional)
         llc_store_misses,              % = 35, uint64 (optional)
         llc_prefetches,                % = 36, uint64 (optional)
         llc_prefetch_misses,           % = 37, uint64 (optional)
         dtlb_loads,                    % = 38, uint64 (optional)
         dtlb_load_misses,              % = 39, uint64 (optional)
         dtlb_stores,                   % = 40, uint64 (optional)
         dtlb_store_misses,             % = 41, uint64 (optional)
         dtlb_prefetches,               % = 42, uint64 (optional)
         dtlb_prefetch_misses,          % = 43, uint64 (optional)
         itlb_loads,                    % = 44, uint64 (optional)
         itlb_load_misses,              % = 45, uint64 (optional)
         branch_loads,                  % = 46, uint64 (optional)
         branch_load_misses,            % = 47, uint64 (optional)
         node_loads,                    % = 48, uint64 (optional)
         node_load_misses,              % = 49, uint64 (optional)
         node_stores,                   % = 50, uint64 (optional)
         node_store_misses,             % = 51, uint64 (optional)
         node_prefetches,               % = 52, uint64 (optional)
         node_prefetch_misses           % = 53, uint64 (optional)
        }).

-record('mesos.v1.ResourceStatistics',
        {timestamp,                     % = 1, double
         processes,                     % = 30, uint32 (optional)
         threads,                       % = 31, uint32 (optional)
         cpus_user_time_secs,           % = 2, double (optional)
         cpus_system_time_secs,         % = 3, double (optional)
         cpus_limit,                    % = 4, double (optional)
         cpus_nr_periods,               % = 7, uint32 (optional)
         cpus_nr_throttled,             % = 8, uint32 (optional)
         cpus_throttled_time_secs,      % = 9, double (optional)
         mem_total_bytes,               % = 36, uint64 (optional)
         mem_total_memsw_bytes,         % = 37, uint64 (optional)
         mem_limit_bytes,               % = 6, uint64 (optional)
         mem_soft_limit_bytes,          % = 38, uint64 (optional)
         mem_file_bytes,                % = 10, uint64 (optional)
         mem_anon_bytes,                % = 11, uint64 (optional)
         mem_cache_bytes,               % = 39, uint64 (optional)
         mem_rss_bytes,                 % = 5, uint64 (optional)
         mem_mapped_file_bytes,         % = 12, uint64 (optional)
         mem_swap_bytes,                % = 40, uint64 (optional)
         mem_low_pressure_counter,      % = 32, uint64 (optional)
         mem_medium_pressure_counter,   % = 33, uint64 (optional)
         mem_critical_pressure_counter, % = 34, uint64 (optional)
         disk_limit_bytes,              % = 26, uint64 (optional)
         disk_used_bytes,               % = 27, uint64 (optional)
         perf,                          % = 13, {msg,'mesos.v1.PerfStatistics'} (optional)
         net_rx_packets,                % = 14, uint64 (optional)
         net_rx_bytes,                  % = 15, uint64 (optional)
         net_rx_errors,                 % = 16, uint64 (optional)
         net_rx_dropped,                % = 17, uint64 (optional)
         net_tx_packets,                % = 18, uint64 (optional)
         net_tx_bytes,                  % = 19, uint64 (optional)
         net_tx_errors,                 % = 20, uint64 (optional)
         net_tx_dropped,                % = 21, uint64 (optional)
         net_tcp_rtt_microsecs_p50,     % = 22, double (optional)
         net_tcp_rtt_microsecs_p90,     % = 23, double (optional)
         net_tcp_rtt_microsecs_p95,     % = 24, double (optional)
         net_tcp_rtt_microsecs_p99,     % = 25, double (optional)
         net_tcp_active_connections,    % = 28, double (optional)
         net_tcp_time_wait_connections, % = 29, double (optional)
         net_traffic_control_statistics = [] % = 35, [{msg,'mesos.v1.TrafficControlStatistics'}]
        }).

-record('mesos.v1.Credentials',
        {credentials = []               % = 1, [{msg,'mesos.v1.Credential'}]
        }).

-record('mesos.v1.ResourceUsage.Executor',
        {executor_info,                 % = 1, {msg,'mesos.v1.ExecutorInfo'}
         allocated = [],                % = 2, [{msg,'mesos.v1.Resource'}]
         statistics                     % = 3, {msg,'mesos.v1.ResourceStatistics'} (optional)
        }).

-record('mesos.v1.ACL',
        {
        }).

-record('mesos.v1.ACL.RunTask',
        {principals,                    % = 1, {msg,'mesos.v1.ACL.Entity'}
         users                          % = 2, {msg,'mesos.v1.ACL.Entity'}
        }).

-record('mesos.v1.ACL.RegisterFramework',
        {principals,                    % = 1, {msg,'mesos.v1.ACL.Entity'}
         roles                          % = 2, {msg,'mesos.v1.ACL.Entity'}
        }).

-record('mesos.v1.ACL.ShutdownFramework',
        {principals,                    % = 1, {msg,'mesos.v1.ACL.Entity'}
         framework_principals           % = 2, {msg,'mesos.v1.ACL.Entity'}
        }).

-record('mesos.v1.ACLs',
        {permissive = true,             % = 1, bool (optional)
         register_frameworks = [],      % = 2, [{msg,'mesos.v1.ACL.RegisterFramework'}]
         run_tasks = [],                % = 3, [{msg,'mesos.v1.ACL.RunTask'}]
         shutdown_frameworks = []       % = 4, [{msg,'mesos.v1.ACL.ShutdownFramework'}]
        }).

-record('mesos.v1.MasterInfo',
        {id,                            % = 1, string
         ip,                            % = 2, uint32
         port = 5050,                   % = 3, uint32
         pid,                           % = 4, string (optional)
         hostname,                      % = 5, string (optional)
         version,                       % = 6, string (optional)
         address                        % = 7, {msg,'mesos.v1.Address'} (optional)
        }).

-record('mesos.v1.ResourceUsage',
        {executors = [],                % = 1, [{msg,'mesos.v1.ResourceUsage.Executor'}]
         total = []                     % = 2, [{msg,'mesos.v1.Resource'}]
        }).

-record('mesos.v1.Value',
        {type,                          % = 1, {enum,'mesos.v1.Value.Type'}
         scalar,                        % = 2, {msg,'mesos.v1.Value.Scalar'} (optional)
         ranges,                        % = 3, {msg,'mesos.v1.Value.Ranges'} (optional)
         set,                           % = 4, {msg,'mesos.v1.Value.Set'} (optional)
         text                           % = 5, {msg,'mesos.v1.Value.Text'} (optional)
        }).

-record('mesos.v1.ContainerID',
        {value                          % = 1, string
        }).

-endif.
